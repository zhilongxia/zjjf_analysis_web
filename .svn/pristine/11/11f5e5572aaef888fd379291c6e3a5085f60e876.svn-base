<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zjjf.analysis.mapper.analysis.BaseRoleAuthMapper" >
  <resultMap id="BaseResultMap" type="com.zjjf.analysis.beans.analysis.base.BaseRoleAuth" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="roleId" property="roleId" jdbcType="INTEGER" />
    <result column="menuAuthId" property="menuAuthId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, roleId, menuAuthId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from base_role_auth
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByRoleId" parameterType="java.lang.Integer" >
      delete from base_role_auth where roleId = #{roleId}
  </delete>
  
  <delete id="deleteByRoleIdMenuId" parameterType="java.util.Map" >
      delete from base_role_auth where roleId = #{roleId} and menuAuthId in (select id from base_menu where pid = #{pid})
  </delete>
  
  <insert id="insert" parameterType="com.zjjf.analysis.beans.analysis.base.BaseRoleAuth" >
    insert into base_role_auth (id, roleId, menuAuthId
      )
    values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{menuAuthId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zjjf.analysis.beans.analysis.base.BaseRoleAuth" >
    insert into base_role_auth
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleId != null" >
        roleId,
      </if>
      <if test="menuAuthId != null" >
        menuAuthId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="menuAuthId != null" >
        #{menuAuthId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zjjf.analysis.beans.analysis.base.BaseRoleAuth" >
    update base_role_auth
    <set >
      <if test="roleId != null" >
        roleId = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="menuAuthId != null" >
        menuAuthId = #{menuAuthId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zjjf.analysis.beans.analysis.base.BaseRoleAuth" >
    update base_role_auth
    set roleId = #{roleId,jdbcType=INTEGER},
      menuAuthId = #{menuAuthId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getByMenuId" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
		t1.id, 
		t1.roleId, 
		t1.menuAuthId
	from
	  `base_role_auth` t1 left join `base_auth_menu` t2 on t2.id = t1.`menuAuthId` where t2.`menuId` = #{menuId}
  </select>
  
  <select id="getSelectMenuByRoleId" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
		t1.id, 
		t1.roleId, 
		t1.menuAuthId
	from
	  `base_role_auth` t1 
	  inner join `base_auth_menu` t2 on t2.id = t1.`menuAuthId` 
	  inner join `base_menu` t3 on t3.id = t2.`menuId`
	  where t3.level = #{level} and  t1.`roleId` = #{roleId}
	  <if test="pid != null and pid != '' " >
        and t3.pid = #{pid}
      </if>
  </select>
  
</mapper>
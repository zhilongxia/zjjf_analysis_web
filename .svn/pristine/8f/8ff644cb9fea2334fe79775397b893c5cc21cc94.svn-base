<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zjjf.analysis.mapper.analysis.BaseRoleDataMapper" >
  <resultMap id="BaseResultMap" type="com.zjjf.analysis.beans.analysis.base.BaseRoleData" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="roleIds" property="roleIds" jdbcType="VARCHAR" />
    <result column="menuId" property="menuId" jdbcType="INTEGER" />
    <result column="tableKey" property="tableKey" jdbcType="VARCHAR" />
    <result column="isChecked" property="isChecked" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, level, roleIds, menuId, tableKey, isChecked
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from base_role_data
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from base_role_data
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zjjf.analysis.beans.analysis.base.BaseRoleData" >
    insert into base_role_data (id, level, roleIds, 
      menuId, tableKey, isChecked)
    values (#{id,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}, #{roleIds,jdbcType=VARCHAR}, 
      #{menuId,jdbcType=INTEGER}, #{tableKey,jdbcType=VARCHAR}, #{isChecked,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zjjf.analysis.beans.analysis.base.BaseRoleData" >
    insert into base_role_data
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="roleIds != null" >
        roleIds,
      </if>
      <if test="menuId != null" >
        menuId,
      </if>
      <if test="tableKey != null" >
        tableKey,
      </if>
      <if test="isChecked != null" >
        isChecked,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="roleIds != null" >
        #{roleIds,jdbcType=VARCHAR},
      </if>
      <if test="menuId != null" >
        #{menuId,jdbcType=INTEGER},
      </if>
      <if test="tableKey != null" >
        #{tableKey,jdbcType=VARCHAR},
      </if>
      <if test="isChecked != null" >
        #{isChecked,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zjjf.analysis.beans.analysis.base.BaseRoleData" >
    update base_role_data
    <set >
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="roleIds != null" >
        roleIds = #{roleIds,jdbcType=VARCHAR},
      </if>
      <if test="menuId != null" >
        menuId = #{menuId,jdbcType=INTEGER},
      </if>
      <if test="tableKey != null" >
        tableKey = #{tableKey,jdbcType=VARCHAR},
      </if>
      <if test="isChecked != null" >
        isChecked = #{isChecked,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zjjf.analysis.beans.analysis.base.BaseRoleData" >
    update base_role_data
    set level = #{level,jdbcType=INTEGER},
      roleIds = #{roleIds,jdbcType=VARCHAR},
      menuId = #{menuId,jdbcType=INTEGER},
      isChecked = #{isChecked,jdbcType=INTEGER},
      tableKey = #{tableKey,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getAuthorityData" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select <include refid="Base_Column_List" /> from base_role_data 
    <where>
    	<if test="menuId != null and menuId != '' " >
        	and menuId = #{menuId}
        </if>
        <if test="isChecked != null and isChecked != '' " >
        	and isChecked = #{isChecked}
        </if>
        <if test="roleIds != null and roleIds != '' " >
        	and roleIds in ${roleIds}
        </if>
    </where>
  </select>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zjjf.analysis.mapper.analysis.BaseMenuMapper" >
  <resultMap id="BaseResultMap" type="com.zjjf.analysis.beans.analysis.authority.BaseMenu" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="menuNo" property="menuNo" jdbcType="VARCHAR" />
    <result column="menuName" property="menuName" jdbcType="VARCHAR" />
    <result column="menuUrl" property="menuUrl" jdbcType="VARCHAR" />
    <result column="ordId" property="ordId" jdbcType="INTEGER" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="createUser" property="createUser" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
    
  </resultMap>
  <sql id="Base_Column_List" >
    id, menuNo, menuName, menuUrl, ordId, level, createTime, updateTime, createUser, 
    status, pid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from base_menu
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from base_menu
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zjjf.analysis.beans.analysis.authority.BaseMenu" >
    insert into base_menu (id, menuNo, menuName, 
      menuUrl, ordId, level, 
      createTime, updateTime, createUser, 
      status)
    values (#{id,jdbcType=INTEGER}, #{menuNo,jdbcType=VARCHAR}, #{menuName,jdbcType=VARCHAR},
      #{menuUrl,jdbcType=VARCHAR}, #{ordId,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zjjf.analysis.beans.analysis.authority.BaseMenu" >
    insert into base_menu
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="menuNo != null" >
        menuNo,
      </if>
      <if test="menuName != null" >
        menuName,
      </if>
      <if test="menuUrl != null" >
        menuUrl,
      </if>
      <if test="ordId != null" >
        ordId,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="updateTime != null" >
        updateTime,
      </if>
      <if test="createUser != null" >
        createUser,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="menuNo != null" >
        #{menuNo,jdbcType=VARCHAR},
      </if>
      <if test="menuName != null" >
        #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="menuUrl != null" >
        #{menuUrl,jdbcType=VARCHAR},
      </if>
      <if test="ordId != null" >
        #{ordId,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zjjf.analysis.beans.analysis.authority.BaseMenu" >
    update base_menu
    <set >
      <if test="menuNo != null" >
        menuNo = #{menuNo,jdbcType=VARCHAR},
      </if>
      <if test="menuName != null" >
        menuName = #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="menuUrl != null" >
        menuUrl = #{menuUrl,jdbcType=VARCHAR},
      </if>
      <if test="ordId != null" >
        ordId = #{ordId,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        createUser = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zjjf.analysis.beans.analysis.authority.BaseMenu" >
    update base_menu
    set menuNo = #{menuNo,jdbcType=VARCHAR},
      menuName = #{menuName,jdbcType=VARCHAR},
      menuUrl = #{menuUrl,jdbcType=VARCHAR},
      ordId = #{ordId,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      createUser = #{createUser,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getMenuLevel" resultType="java.util.Map" parameterType="java.util.Map" >
		select distinct 
		  t1.id,
		  t1.treeClass,
		  t1.`menuName`,
		  t1.`menuUrl`,
		  t1.`menuNo`,
		  t1.`level`
		from
		  `base_menu` t1 
  			inner join base_auth_menu t2 on t2.`menuId` = t1.id 
  			inner join base_role_auth t3 on t3.`menuAuthId` = t2.`id`
  		  <where>
  		  	  <if test="rollIdList != null and rollIdList != '' " >
	  		  	  t3.`roleId` in 
		          <foreach collection="rollIdList" index="index" item="item" open="(" separator="," close=")">
		            #{item}
		          </foreach>
		      </if>
		  	  <if test="level != null and level != ''" >
		        and t1.level = #{level}
		      </if>
		      <if test="pid != null and pid != ''" >
		        and t1.pid = #{pid}
		      </if>
	      </where>
		  order by t1.ordId
  </select>
  
  <select id="getAllMenu" resultType="java.util.Map" parameterType="java.util.Map" >
		select distinct 
		  t1.id,
		  t1.treeClass,
		  t1.`menuName`,
		  t1.`menuUrl`,
		  t1.`menuNo`,
		  t1.`level`
		from
		  `base_menu` t1
  		  <where>
		  	  <if test="level != null and level != ''" >
		        and t1.level = #{level}
		      </if>
		      <if test="pid != null and pid != ''" >
		        and t1.pid = #{pid}
		      </if>
	      </where>
		  order by t1.ordId
  </select>
  
  <select id="getParentMenuIdByMenuId" resultMap="BaseResultMap"  parameterType="java.lang.Integer" >
	 select <include refid="Base_Column_List" /> from base_menu where id = #{id}
  </select>
</mapper>
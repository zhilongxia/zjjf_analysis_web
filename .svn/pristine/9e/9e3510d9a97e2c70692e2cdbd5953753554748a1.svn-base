<%@ page language="java" contentType="text/html; charset=UTF-8"	pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html lang="zh" ng-app="role_edit">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>系统角色添加/编辑</title>
    <%@ include file="../../common/head.jsp"%>
    <link rel="stylesheet" href="<%=request.getContextPath() %>/resources/css/authority.css">
</head>
<body class="wrap-bd" ng-controller="roleEditController">
<input type="hidden" name="name" class="input input-default" value=${id } id="role_id">
<input type="hidden" name="edit_type" class="input input-default" value=${edit_type } id="edit_type">
<div class="mb-default">
    <a href="" class="crumb">权限设置</a>
    <a href="" class="crumb">角色管理</a>
    <a href="" class="crumb crumb-active" onclick="divclick();">角色创建/编辑</a>
</div>
<div class="wrap-bd table-border bg">

    <div ng-show="roleDivReadOnly">
        <label class="label">复制角色：</label>
        <select class="select" ng-model="selectRole" ng-options="v.id as v.roleName for v in roleList" ng-change="ovverRole()">
		    <option value="">请选择</option>
		</select>
    </div>
    <p>
        <label class="label">角色名：</label>
        <input type="text" name="name" class="input input-default" ng-model="roleName">
    </p>
    <p>
        <label class="label">角色层级：</label>
        <select class="select" ng-model="selectDataLevel" ng-disabled="dataLevelReadOnly" ng-options="v.code as v.name for v in dataLevelSelect">
        	<option value="">请选择</option>
		</select>
    </p>
    <div class="clearfix">
        <label class="fl label">角色权限</label>
        <div class="fl auth">
            <div>
            	<input type="hidden" ng-model="selectionTotal">
            	<div ng-repeat="menuone in menuTree">
		            <div class="tab-item" ng-class="{'active':showdetails}" ng-click="showdetails=!showdetails">{{menuone.menuName}}<i class="dir"></i></div>
		            <div class="tab-content" ng-show="showdetails">
		                <div class="box clearfix">
		                    <span class="txt-log mr-default fl">页面选择</span>
		                    <span class="mr-default fl">
		                        <input type="checkbox" name="selected" class="checkbox" ng-click="checkAllPage($event, menuone.id, 'page')"/>全选
		                    </span>
		                    <div class="fl list">
		                        <div class="nav">
		                        	<span class="item" ng-repeat="level2map in menuone.level2Tree">
		                        	    <input id="{{level2map.id}}" type="checkbox" value="{{level2map.id}}" ng-checked="isSelected(level2map.id, menuone.id, 'page')" ng-click="toggleSelection(level2map.id, menuone.id, 'page')" > {{level2map.menuName}}
		                        	</span>
		                        </div>
		                    </div>
		                </div>
		                <div class="box clearfix">
		                    <span class="txt-log mr-default fl">字段选择</span>
		                    <span class="mr-default fl">
		                        <input type="checkbox" name="selected" class="checkbox" ng-click="checkAllPage($event, menuone.id, 'key')"/>全选
		                    </span>
		                    <div class="fl list">
		                        <span class="item" ng-repeat="datamap in menuone.keyLists">
 									<input id="{{datamap.id}}" type="checkbox" value="{{datamap.id}}" ng-checked="isSelected(datamap.id, menuone.id, 'key')" ng-click="toggleSelection(datamap.id, menuone.id, 'key')" > {{datamap.name}}
		                        </span>
		                    </div>
		                </div>
		            </div>
	            </div>
            </div>
        </div>
    </div>
    <div class="mt-default">
        <label class="label"></label>
        <button class="button button-ok" ng-click="addRole();">保存</button>
        <button class="button button-cancel" onclick="window.history.go(-1)">取消</button>
    </div>
</div>
<script>

    var root = '<%=request.getContextPath() %>';

    var loadRoleController_url = root + '/api/authority/role/getRoleEditView.do';
    var saveRoleInfo_url = root + '/api/authority/role/saveRoleInfo.do';
    var isExitRole_url = root + '/api/authority/role/isExitRole.do';
    
    var app = angular.module('role_edit',[]); // 第二个参数定义了Module依赖 
    app.config(function($httpProvider) {
        $httpProvider.defaults.headers.put['Content-Type'] = 'application/x-www-form-urlencoded';
        $httpProvider.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';
        $httpProvider.defaults.transformRequest = [function(data) {
            var param = function(obj) {
                var query = '';
                var name, value, fullSubName, subName, subValue, innerObj, i;
                for (name in obj) {
                    value = obj[name];
                    if (value instanceof Array) {
                        for (i = 0; i < value.length; ++i) {
                            subValue = value[i];
                            fullSubName = name + '[' + i + ']';
                            innerObj = {};
                            innerObj[fullSubName] = subValue;
                            query += param(innerObj) + '&';
                        }
                    } else if (value instanceof Object) {
                        for (subName in value) {
                            subValue = value[subName];
                            fullSubName = name + '[' + subName + ']';
                            innerObj = {};
                            innerObj[fullSubName] = subValue;
                            query += param(innerObj) + '&';
                        }
                    } else if (value !== undefined && value !== null) {
                        query += encodeURIComponent(name) + '='
                                + encodeURIComponent(value) + '&';
                    }
                }
                return query.length ? query.substr(0, query.length - 1) : query;
            };
            return angular.isObject(data) && String(data) !== '[object File]'
                    ? param(data)
                    : data;
        }];
    });

    app.controller('roleEditController', ['$scope', 'loadRoleService', 'saveRoleInfoService', 'isExitRole', function ($scope, loadRoleService, saveRoleInfoService, isExitRole) {
    	
    	 $scope.selectionTotal=[];
    	 
    	 var alreadyMenuId = function(menuOneId){
    		var flag = -1;
			angular.forEach($scope.selectionTotal, function(bean, i){
				if(bean["menuOneId"] && bean["menuOneId"] == menuOneId){
   	    			flag = i;
   	    		}
   			})
   			return flag;
    	 }
    	 
   
    	$scope.ovverRole = function(){
    		
    		var data = {};
    		data["id"] = $scope.selectRole;
    		document.getElementById("role_id").value = 0;
    		console.log(data);
			loadRoleService.list(data).success(function (result) {
		    	$scope.roleList = result.roleList;
		    	$scope.dataLevelSelect = [{"code":1, name:"城市"},{"code":2, name:"区域"}];
		    	if(edit_type && edit_type == 2){
		    		$scope.selectRole = result.roleInfo.id;
		    	}else if(edit_type && edit_type == 1){
		    		$scope.selectRole = result.roleInfo.id;
		    		$scope.roleName = result.roleInfo.roleName;
		    	}else if(edit_type && edit_type ==0){
		    		
		    	}
		    	//$scope.roleName = result.roleInfo.roleName;
		    	//$scope.selectRole = result.roleInfo.id;
		    	//$scope.selectDataLevel = result.roleInfo.dataLevel;
	    		$scope.menuTree = result.menuTree;
	    		$scope.selectionTotal= result.selectionTotal;
	        });	
    	}
    	
    	 $scope.toggleSelection = function toggleSelection(code, menuOneId, param) {
    		
    		var index = alreadyMenuId(menuOneId);
    		if(index >= 0){
    			if("key" == param){
   					var idx = $scope.selectionTotal[index]["selection"].indexOf(code);
   					if(idx > -1){
   						$scope.selectionTotal[index]["selection"].splice(idx, 1);
   					}else{
   						$scope.selectionTotal[index]["selection"].push(code);
   					}
   				}else if("page" == param){
   					var idx = $scope.selectionTotal[index]["selectionPage"].indexOf(code);
   					if(idx > -1){
   						$scope.selectionTotal[index]["selectionPage"].splice(idx, 1);
   					}else{
   						$scope.selectionTotal[index]["selectionPage"].push(code);
   					}
   				}
    		}else{
    			var temp = {};
   				var _selection = [];
   				var _selectionPage = [];
   				if("key" == param){
   					_selection.push(code);
   				}else if("page" == param){
   					_selectionPage.push(code);
   				}
   				temp["menuOneId"] = menuOneId;
   				temp["selection"] = _selection;
   				temp["selectionPage"] = _selectionPage;
   				$scope.selectionTotal.push(temp);
    		}
   			console.log($scope.selectionTotal);
    	};
    	
    	$scope.checkAllPage = function($event, menuOneId, param) {
    		
    		var index = alreadyMenuId(menuOneId);
    		if(index >= 0){
    		}else {
    			var temp = {};
   				var _selection = [];
   				var _selectionPage = [];
   				temp["menuOneId"] = menuOneId;
   				temp["selection"] = _selection;
   				temp["selectionPage"] = _selectionPage;
   				$scope.selectionTotal.push(temp);
   				index = $scope.selectionTotal.length - 1;
    		}
   			var checkbox = $event.target;
       		if("key" == param){
       			var list = [];
				angular.forEach($scope.menuTree, function(menuOne, i){
	   	    		if(menuOne.id == menuOneId){
	   	    			angular.forEach(menuOne.keyLists, function(authority, i){
	   	    				list.push(authority.id);
	   	    				$scope.isSelected(authority.id, menuOneId, param);
	   	    			})
	   	    		}
	   	    	})
	   	    	if(checkbox.checked){
	   	    		$scope.selectionTotal[index]["selection"] = angular.copy(list);
	   	    	}else{
	   	    		$scope.selectionTotal[index]["selection"] = [];
	   	    	}
   			}else if("page" == param){
       			var list = [];
				angular.forEach($scope.menuTree, function(menuOne, i){
	   	    		if(menuOne.id == menuOneId){
	   	    			angular.forEach(menuOne.level2Tree, function(menuTwo, i){
	   	    				list.push(menuTwo.id);
	   	    				$scope.isSelected(menuTwo.id, menuOneId, param);
	   	    			})
	   	    		}
	   	    	})
	   	    	if(checkbox.checked){
	   	    		$scope.selectionTotal[index]["selectionPage"] = angular.copy(list);
	   	    	}else{
	   	    		$scope.selectionTotal[index]["selectionPage"] = [];
	   	    	}
   			}
   		};
    	
        $scope.isSelected = function (code, menuOneId, param) {
        	
        	if("page" == param){
        		var index = alreadyMenuId(menuOneId);
        		if(index >= 0){
        			return $scope.selectionTotal[index]["selectionPage"].indexOf(code) > -1;
        		}
        	}else if("key" == param){
        		var index = alreadyMenuId(menuOneId);
        		if(index >= 0){
        			return $scope.selectionTotal[index]["selection"].indexOf(code) > -1;
        		}
        	}
        };
        
    	var loadPage = function(){

    		var edit_type = document.getElementById("edit_type").value;
			var data = getParam();
			loadRoleService.list(data).success(function (result) {
		    	$scope.roleList = result.roleList;
		    	$scope.dataLevelSelect = [{"code":1, name:"城市"},{"code":2, name:"区域"}];
		    	if(edit_type && edit_type == 2){
		    		$scope.roleDivReadOnly = true;
		    		$scope.dataLevelReadOnly = false;
		    		$scope.selectRole = result.roleInfo.id;
		    	}else if(edit_type && edit_type == 1){
		    		$scope.roleDivReadOnly = false;
		    		$scope.dataLevelReadOnly = true;
		    		$scope.selectRole = result.roleInfo.id;
		    		$scope.roleName = result.roleInfo.roleName;
		    	}else if(edit_type && edit_type == 0){
		    		$scope.roleDivReadOnly = true;
		    		$scope.dataLevelReadOnly = false;
		    	}
/* 		    	if(result.roleInfo.dataLevel){
		    		$scope.dataLevelReadOnly = true;
		    	}else{
		    		$scope.dataLevelReadOnly = false;
		    	} */
		    	$scope.selectDataLevel = result.roleInfo.dataLevel;
	    		$scope.menuTree = result.menuTree;
	    		$scope.selectionTotal= result.selectionTotal;
	        });	
    	}
    	// 保存
		$scope.addRole = function() {
    		
    		if(!check_submit()){
    			return false;
    		}
			var data = getParam();
			console.log(data);
			saveRoleInfoService.save(data).success(function (result) {
				alert("保存角色成功！");
				window.history.go(-1);
            });	
		}
        
    	var getParam = function() {
    		var paramMap = {};
    		paramMap["roleName"] = $scope.roleName || null;
    		paramMap["level"] = $scope.selectDataLevel || 0;
    		paramMap["id"] = document.getElementById("role_id").value;
    		paramMap["edit_type"] = document.getElementById("edit_type").value;
    		paramMap["selectionTotal"] = JSON.stringify($scope.selectionTotal || null);
    		return paramMap;
    	}	
    	
    	// 提交校验
    	var check_submit = function () {
    		
    		if($scope.roleName == null){
    			alert("您还未输入角色名称！");
    			return false;
    		}
    		if($scope.selectDataLevel == null){
    			alert("您还未选择角色层级！");
    			return false;
    		}
    		if(!($scope.selectionTotal[0] && $scope.selectionTotal[0]["selection"] && $scope.selectionTotal[0]["selection"].length > 0 && $scope.selectionTotal[0]["selectionPage"] && $scope.selectionTotal[0]["selectionPage"].length > 0)){
    			alert("您还未选择菜单 和字段权限！");
    			return false;
    		}
    		return true;
    	}
    	
		$scope.$watch('$viewContentLoaded', loadPage);
    }]);
    
    // 获取订单列表
    app.factory('loadRoleService', ['$http', function ($http) {
        var list = function (postData) {
            return $http.post(loadRoleController_url, postData);
        }
        return {
            list: function (postData) {
                return list(postData);
            }
        }
    }]);
    
    app.factory('saveRoleInfoService', ['$http', function ($http) {
        var save = function (postData) {
            return $http.post(saveRoleInfo_url, postData);
        }
        return {
        	save: function (postData) {
                return save(postData);
            }
        }
    }]);
    
    app.factory('isExitRole', ['$http', function ($http) {
        var list = function (postData) {
            return $http.post(isExitRole_url, postData);
        }
        return {
        	list: function (postData) {
                return list(postData);
            }
        }
    }]);
</script>
</body>
</html>

<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zjjf.analysis.mapper.analysis.BaseSpGroupMapper" >
  <resultMap id="BaseResultMap" type="com.zjjf.analysis.beans.analysis.base.BaseSpGroup" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="provinceId" property="provinceId" jdbcType="INTEGER" />
    <result column="cityId" property="cityId" jdbcType="INTEGER" />
    <result column="areaId" property="areaId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="isDelete" property="isDelete" jdbcType="BIT" />
    <result column="updateTimeStamp" property="updateTimeStamp" jdbcType="TIMESTAMP" />
    <result column="createTime" property="createTime" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, code, provinceId, cityId, areaId, status, isDelete, updateTimeStamp, createTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from base_spgroup
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from base_spgroup
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zjjf.analysis.beans.analysis.base.BaseSpGroup" >
    insert into base_spgroup (id, name, code, 
      provinceId, cityId, areaId, 
      status, isDelete, updateTimeStamp, 
      createTime)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{provinceId,jdbcType=INTEGER}, #{cityId,jdbcType=INTEGER}, #{areaId,jdbcType=INTEGER}, 
      #{status,jdbcType=TINYINT}, #{isDelete,jdbcType=BIT}, #{updateTimeStamp,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zjjf.analysis.beans.analysis.base.BaseSpGroup" >
    insert into base_spgroup
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="provinceId != null" >
        provinceId,
      </if>
      <if test="cityId != null" >
        cityId,
      </if>
      <if test="areaId != null" >
        areaId,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="isDelete != null" >
        isDelete,
      </if>
      <if test="updateTimeStamp != null" >
        updateTimeStamp,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="provinceId != null" >
        #{provinceId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null" >
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=BIT},
      </if>
      <if test="updateTimeStamp != null" >
        #{updateTimeStamp,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zjjf.analysis.beans.analysis.base.BaseSpGroup" >
    update base_spgroup
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="provinceId != null" >
        provinceId = #{provinceId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null" >
        cityId = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null" >
        areaId = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="isDelete != null" >
        isDelete = #{isDelete,jdbcType=BIT},
      </if>
      <if test="updateTimeStamp != null" >
        updateTimeStamp = #{updateTimeStamp,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zjjf.analysis.beans.analysis.base.BaseSpGroup" >
    update base_spgroup
    set name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      provinceId = #{provinceId,jdbcType=INTEGER},
      cityId = #{cityId,jdbcType=INTEGER},
      areaId = #{areaId,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      isDelete = #{isDelete,jdbcType=BIT},
      updateTimeStamp = #{updateTimeStamp,jdbcType=TIMESTAMP},
      createTime = #{createTime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getSpGroupCodeList" resultType="com.zjjf.analysis.beans.analysis.base.AnaDictionary" parameterType="java.util.Map" >
    select id as "code", name from base_spgroup
    <where>
      <if test="areaId != null and areaId != '' " >
 		  areaId = #{areaId}
      </if>	
      <if test="areaIdList != null and areaIdList != '' " >
 		  areaId in 
          <foreach collection="areaIdList" index="index" item="item" open="(" separator="," close=")">
            #{item}
          </foreach> 
      </if>
      <if test="cityIdList != null and cityIdList != '' " >
 		  cityId in 
          <foreach collection="cityIdList" index="index" item="item" open="(" separator="," close=")">
            #{item}
          </foreach> 
      </if>
	 </where>
  </select>
  
</mapper>
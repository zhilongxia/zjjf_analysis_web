package com.zjjf.analysis.controller.authority;

import java.util.HashMap;

import javax.servlet.http.HttpServletRequest;

import org.apache.shiro.SecurityUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.zjjf.analysis.common.constants.SessionConfig;
import com.zjjf.analysis.controller.BaseController;
import com.zjjf.analysis.services.authority.AuthorityRoleServcie;

@Controller
@RequestMapping({ "/api/authority/role" })
public class AuthorityRoleController extends BaseController {

	@Autowired
	private AuthorityRoleServcie authorityRoleServcie;

	@RequestMapping(value = "/loadPage.do")
	public String loaded(HttpServletRequest request) {

		return "analysis/auth/role";
	}

	/**
	 * 获取角色列表
	 * 
	 * @param request
	 * @return
	 */
	@RequestMapping(value = "/getRoleList.do")
	public @ResponseBody HashMap<String, Object> getRoleList(HttpServletRequest request) {

		HashMap<String, Object> resultMap = new HashMap<String, Object>();
		resultMap.put("roleList", authorityRoleServcie.getRoleList());
		return resultMap;
	}
	
	/**
	 * 添加角色
	 * 
	 * @param request
	 * @return
	 */
	@RequestMapping(value = "/saveRoleInfo.do")
	public @ResponseBody HashMap<String, Object> saveRoleInfo(HttpServletRequest request) {

		String id = request.getParameter("id");
		String roleName = request.getParameter("roleName");
		Integer level = Integer.valueOf(request.getParameter("level") + "");
		String selectionTotal = request.getParameter("selectionTotal");
		String creater = (String) SecurityUtils.getSubject().getSession().getAttribute(SessionConfig.userId);
		HashMap<String, Object> resultMap = new HashMap<String, Object>();
		authorityRoleServcie.saveRoleInfo(id, roleName, creater, selectionTotal, level);
		return resultMap;
	}
	
	/**
	 * 角色编辑redirect
	 * 
	 * @param request
	 * @param model
	 * @return
	 */
	@RequestMapping(value = "/role_edit.do")
	public String role_edit(HttpServletRequest request, Model model) {

		model.addAttribute("id", request.getParameter("id") == null ? 0 : request.getParameter("id"));
		return "analysis/auth/role_edit";
	}
	
	/**
	 * 角色编辑导入load
	 * 
	 * @param request
	 * @return
	 */
	@RequestMapping(value = "/getRoleEditView.do")
	public @ResponseBody HashMap<String, Object> getRoleEditView(HttpServletRequest request) {

		String id = request.getParameter("id");
		HashMap<String, Object> resultMap = new HashMap<String, Object>();
		resultMap.put("roleSelect", authorityRoleServcie.getRoleList());
		resultMap.put("roleInfo", id == null ? null : authorityRoleServcie.getRoleInfo(Integer.valueOf(id)));
		resultMap.put("menuTree", authorityRoleServcie.getAllMenuTree());
		return resultMap;
	}
	

	/**
	 * 删除角色
	 * 
	 * @param request
	 * @return
	 */
	@RequestMapping(value = "/deleteRole.do")
	@ResponseBody
	public HashMap<String, Object> deleteRole(HttpServletRequest request) {
		
		HashMap<String, Object> resultMap = new HashMap<String, Object>();
		String id = request.getParameter("id");
		if(id == null){
			resultMap.put("code", "1");
			resultMap.put("msg", "传入参数错误！");
			return resultMap;
		}
		authorityRoleServcie.deleteRole(Integer.valueOf(id));
		resultMap.put("code", "0");
		return resultMap;
	}
}

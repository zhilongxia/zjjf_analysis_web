<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zjjf.analysis.mapper.analysis.BaseRoleMapper" >
  <resultMap id="BaseResultMap" type="com.zjjf.analysis.beans.analysis.authority.BaseRole" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="roleNo" property="roleNo" jdbcType="VARCHAR" />
    <result column="roleName" property="roleName" jdbcType="VARCHAR" />
    <result column="roleRemark" property="roleRemark" jdbcType="VARCHAR" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="createUser" property="createUser" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="ordId" property="ordId" jdbcType="INTEGER" />
    <result column="isDelete" property="isDelete" jdbcType="CHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, roleNo, roleName, roleRemark, createTime, updateTime, createUser, status, ordId, 
    isDelete
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from base_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from base_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zjjf.analysis.beans.analysis.authority.BaseRole" >
    insert into base_role (id, roleNo, roleName, 
      roleRemark, createTime, updateTime, 
      createUser, status, ordId, 
      isDelete)
    values (#{id,jdbcType=INTEGER}, #{roleNo,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, 
      #{roleRemark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{ordId,jdbcType=INTEGER}, 
      #{isDelete,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zjjf.analysis.beans.analysis.authority.BaseRole" >
    insert into base_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleNo != null" >
        roleNo,
      </if>
      <if test="roleName != null" >
        roleName,
      </if>
      <if test="roleRemark != null" >
        roleRemark,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="updateTime != null" >
        updateTime,
      </if>
      <if test="createUser != null" >
        createUser,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="ordId != null" >
        ordId,
      </if>
      <if test="isDelete != null" >
        isDelete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleNo != null" >
        #{roleNo,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleRemark != null" >
        #{roleRemark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="ordId != null" >
        #{ordId,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zjjf.analysis.beans.analysis.authority.BaseRole" >
    update base_role
    <set >
      <if test="roleNo != null" >
        roleNo = #{roleNo,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null" >
        roleName = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleRemark != null" >
        roleRemark = #{roleRemark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        createUser = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="ordId != null" >
        ordId = #{ordId,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        isDelete = #{isDelete,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zjjf.analysis.beans.analysis.authority.BaseRole" >
    update base_role
    set roleNo = #{roleNo,jdbcType=VARCHAR},
      roleName = #{roleName,jdbcType=VARCHAR},
      roleRemark = #{roleRemark,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      createUser = #{createUser,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      ordId = #{ordId,jdbcType=INTEGER},
      isDelete = #{isDelete,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getRoleByUserId" resultMap="BaseResultMap" parameterType="java.lang.String" >
  		select 
		  t1.id,
		  t1.roleNo,
		  t1.roleName,
		  t1.roleRemark,
		  t1.status,
		  t1.ordId 
		from base_role t1
		  left join `base_role_user` t2 on t2.roleId = t1.id 
		where t2.userId = #{userId}
  </select>
  
  <select id="getAllRole" resultMap="BaseResultMap">
  	  select <include refid="Base_Column_List" /> from base_role
  </select>
  
  <select id="getRoleByRoleId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
  	  select <include refid="Base_Column_List" /> from base_role where id = #{id}
  </select>
</mapper>